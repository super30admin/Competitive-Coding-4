# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverse(self, head):
        prev = None;
        curr = head
        while(curr):
            temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        return prev;
    
    def isPalindrome(self, head: ListNode) -> bool:
        slow, fast = head, head
        while(fast and fast.next):
            slow  = slow.next;
            fast = fast.next.next;
        
        newhead = slow
        slow = None;
        newhead = self.reverse(newhead)
        
        while(head and newhead):
            if(head.val != newhead.val):
                return False;
            head = head.next;
            newhead = newhead.next;
        return True;
        
