/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

//TC : O(n)
//SC : O(h) //At one time - height of tree (elements) will be present in stack.

class Solution {
    
    boolean flag = true;
    public boolean isBalanced(TreeNode root) {
        helper(root);
        return flag;
    }
    
    private int helper(TreeNode root) {
        //Base
        if(root == null) { return 0; }
        
        //Logic
        int lh = helper(root.left);
        int rh = helper(root.right);
        
        if(Math.abs(lh - rh) > 1) {
            flag = false;
        }
        
        return Math.max(lh, rh) + 1;
        
    }
}
