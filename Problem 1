//Time Complexity : O(n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :Yes
// Any problem you faced while coding this :No
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL) return true;
        //find mid
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        //rev 2nd half of the list
        ListNode* mid = slow;
        ListNode* rem= NULL;
        slow=slow->next;
        mid->next = NULL;
        while(slow!=NULL){
            rem = slow;
            slow = slow->next;
            rem->next = mid->next;
            mid->next = rem;
        }
        //compare
        slow=head;
        mid=mid->next;
        while( mid!=NULL){
            if(slow->val!=mid->val){
                return false;
            }
            slow=slow->next;
            mid=mid->next;
        }
        return true;
    }
};